#!/bin/sh

# Copyright 2008 2009 2010 Douglas Wikstrom

# This file is part of Vfork.

# Vfork is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.

# Vfork is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.

# You should have received a copy of the GNU Lesser General Public
# License along with Vfork.  If not, see
# <http://www.gnu.org/licenses/>.

###########################################################################
######################## Execute Demonstration. ###########################
###########################################################################

. ./conf

# Remove remains of any previous demos.
echo "clean" > progress
./clean

# Print information about the demo.
demointro

# Generate info-files.
phasestart "Generate info files."
echo "info_files" >> progress
./info_files || exit
phaseend

# Execute joint key generation.
phasestart "Execute joint key generation."
echo "keygen" >> progress
starttime
./keygen
endtime
phaseend

# We only perform precomputation if the maximal number of ciphertexts
# is positive.
if test ${MAX_NO_CIPHERTEXTS} -gt 0;
then
    # Perform precomputation.
    phasestart "Execute precomputation phase."
    echo "precomp" >> progress
    starttime
    ./precomp
    endtime
    phaseend
fi

# Generate demo input ciphertexts.
phasestart "Generate demo ciphertexts."
echo "gen_ciphs" >> progress
./gen_ciphs || exit
phaseend

# Execute the mixnet.
phasestart "Execute mixing phase."
echo "mix" >> progress
starttime
./mix
endtime
phaseend

demoend

if test $CORRECTNESS = "noninteractive"
then

    echo "
rm -rf export*
mkdir export
cd export
cp -R ../dir/roProof .
cp ../protInfo.xml .
cp ../${KEY_DESTINATION} .
cp ../ciphertexts .
cp ../plaintexts .
cd ..
rm -f export.tar
tar cvf export.tar export > /dev/null
" > $TMP_COMMAND
    cpevalat $TMP_COMMAND 1

    # This convoluted way of invoking copyfrom is needed due to a bug
    # in /bin/sh.
    bash -c "source conf; copyfrom 1 export.tar ."
    tar xvf export.tar > /dev/null

    getloc LOC 1
    echo "----------------------------------------------------------------"
    echo "Since you are using (heuristically secure) non-interactive "
    echo "zero-knowledge proofs of correctness, you can find a complete "
    echo "universally verifiable transcript of the complete mixing process "
    echo "in the ${LOC}${DEFAULT_PREFIX}/Party1/dir/roProof/ directory and "
    echo "similarly for the other parties."
    echo ""
    echo "For convenience the demo also copies this directory as well as "
    echo "the protocol info file, the public key, the ciphertext, and the "
    echo "plaintexts into a local directory \"export\". Thus, this directory "
    echo "contains what would be published on a bulletin board for everybody "
    echo "to verify at the end of an execution."
    echo ""
    echo "You can verify the content of this directory by executing"
    echo ""
    echo "    ./verify"
    echo ""
    echo "This invokes the stand-alone external verifier vmnv. Execute "
    echo "vmnv -h to learn how to use this tool."
    echo "----------------------------------------------------------------"
fi